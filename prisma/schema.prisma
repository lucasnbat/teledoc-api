// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Patient {
  patientId       String @id @default(cuid()) @map("patient_id")
  patientName     String @map("patient_name")
  patientPhone    String @map("patient_phone")
  patientEmail    String @unique @map("patient_email")
  patientPassword String @map("patient_password")

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @default(now()) @map("updated_at")
  Token     Token[]

  @@map("patients")
}

model Doctor {
  doctorId          String  @id @default(cuid()) @map("doctor_id")
  doctorName        String  @map("doctor_name")
  doctorPhone       String  @map("doctor_phone")
  doctorEmail       String  @unique @map("doctor_email")
  numberOfPatients  Int     @map("number_patients")
  rating            Float   @map("rating")
  yearsOfExperience Int     @map("years_experience")
  periodOfWork      String  @map("period_work")
  about             String  @map("about")
  avatarUrl         String? @map("avatar_url")
  speciality        String?

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @default(now()) @map("updated_at")

  @@map("doctors")
}

enum TokenType {
  PASSWORD_RECOVER
}

model Token {
  id        String    @id @default(uuid())
  type      TokenType
  createdAt DateTime  @default(now()) @map("created_at")

  patient     Patient @relation(fields: [patientIdFk], references: [patientId])
  patientIdFk String

  @@map("tokens")
}
